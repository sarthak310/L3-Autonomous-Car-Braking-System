# -*- coding: utf-8 -*-
"""Task1GoogleAPI.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oXl6tuIsVahZUYFXJldTevg-MhXvhaAZ
"""

!pip install googlemaps

import googlemaps
# from sklearn.cluster import KMeans

gmaps = googlemaps.Client(key='your_api_key')

origin = (33.417920520438514, -111.93442461936176) # MU
destination = (33.435454899300865, -112.01019910587053) # Sky Harbor Airport, Phoenix

# def monitor_traffic_and_workload(origin, destination):
    #while True:

# traffic_data = gmaps.directions(origin, destination, departure_time="now")

response = gmaps.distance_matrix(origin, destination, departure_time="now")
print(response)
normal_duration = response['rows'][0]['elements'][0]['duration']['value']
current_duration = response['rows'][0]['elements'][0]['duration_in_traffic']['value']
if normal_duration > current_duration:
    WL = "LCW"
else:
    WL = "HCW"
print(WL)

        # For example, you could cluster traffic data to assess road conditions
        # kmeans = KMeans(n_clusters=2)  # Assuming 2 clusters for normal and poor conditions
        # kmeans.fit(traffic_data)

        # Assess cognitive workload based on the clustering results
        # if some_condition:  # Define your own condition for high cognitive workload
            #print("High cognitive workload")
        # else:
            #print("Low cognitive workload")

# Start monitoring
# monitor_traffic_and_workload(origin, destination)
